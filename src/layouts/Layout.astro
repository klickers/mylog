---
import "../styles/app.scss"

interface LogGroup {
	name: string
	slug: string
}

interface Props {
	title: string
}

const { title } = Astro.props

const res = await fetch(import.meta.env.PUBLIC_API_URL, {
	method: "POST",
	headers: { "Content-Type": "application/json" },
	body: JSON.stringify({
		query: `
			query ActiveLogGroups($where: LogGroupWhereInput!, $orderBy: [LogGroupOrderByInput!]!) {
				logGroups(where: $where, orderBy: $orderBy) {
					name
					slug
				}
			}`,
		variables: {
			where: {
				completed: {
					equals: false,
				},
				startDate: {
					not: null,
				},
			},
			orderBy: [
				{
					name: "asc",
				},
			],
		},
	}),
})
const data = await res.json()
const logGroups = data.data.logGroups
---

<!doctype html>
<html lang="en" data-theme="acid">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div class="max-w-screen-lg mx-auto">
			<div class="prose px-6 pt-12">
				<h1>{title}</h1>
			</div>
			<div class="flex gap-6">
				<aside class="px-6 py-12 min-w-64 space-y-2">
					{
						logGroups.map((group: LogGroup) => (
							<div>
								<a
									href={`/group/${group.slug}`}
									class="btn btn-sm"
								>
									{group.name}
								</a>
							</div>
						))
					}
				</aside>
				<main><slot /></main>
			</div>
		</div>
	</body>
</html>
